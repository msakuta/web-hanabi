{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/WebHanabi.vue?5b9d","webpack:///./src/components/PlayerCompo.vue?5308","webpack:///./src/App.vue?84aa","webpack:///./src/App.vue","webpack:///./src/components/WebHanabi.vue","webpack:///./src/components/PlayerCompo.vue","webpack:///./src/card.ts","webpack:///./src/components/PlayerCompo.vue?8f2c","webpack:///./src/components/PlayerCompo.vue?a119","webpack:///./src/player.ts","webpack:///./src/session.ts","webpack:///./src/gameState.ts","webpack:///./src/components/WebHanabi.vue?aaa9","webpack:///./src/components/WebHanabi.vue?fb33","webpack:///./src/App.vue?3acc","webpack:///./src/App.vue?dfb6","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","class","href","type","debugMode","userId","gameState","userName","setUserName","sessionId","newSession","joinSession","ref","sessionUrl","readonly","copySessionUrl","fieldCards","card","cidx","getClass","toString","playedCards","reduce","count","cards","discardedCards","historyReversed","item","substituteHistory","tokens","strikes","players","player","idx","isSelfPlayer","thePlayer","activeTurn","gameOver","turn","selectedCard","togglePlayerAuto","playerCardClick","playCard","discardCard","number","hintNumber","color","hintColor","style","checked","auto","playerAutoClick","cardLetter","Array","fill","map","_","possibleNumbers","possibleColors","getColor","this","fromColor","charCodeAt","splits","substr","split","parseInt","genCards","ret","index","undefined","String","fromCharCode","formatCardLetters","indices","props","Number","Boolean","setup","context","emit","render","__scopeId","countIf","arr","f","accum","drawCard","Math","floor","random","serialize","playerId","lastHintedNumber","lastHintedColor","deserialize","preferredCard","hintedNumber","globalTurn","find","findIndex","hintedColor","hitColors","openNumbers","filter","numPlayableCards","numHintableCards","affected","sessionIdLength","generateSessionId","offlineMode","db","doc","collection","set","localStorage","setItem","id","loadSessionId","params","URLSearchParams","document","location","search","substring","st","getItem","saveSessionId","history","startDate","lastRoundBegun","resetGame","pre","cur","Date","now","endDate","loadUserName","then","loadSession","deserializeSession","subscribe","updateSession","unsubscriber","onSnapshot","next","exists","tryNextMove","confirm","console","log","update","size","foundSelf","firstNonPlayer","newId","prompt","sessionData","indexOf","components","PlayerCompo","init","origin","pathname","sessionUrlInput","pendingNextMove","noUpdate","playerInTurn","setTimeout","think","checkGameOver","autoPlay","alert","striked","min","drawnCard","ss","replaceAll","copyText","select","setSelectionRange","execCommand","copy","reverse","WebHanabi","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","analytics","firestore","generateUserId","loadUserId","App","mount"],"mappings":"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","file":"js/app.f5169da1.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./WebHanabi.vue?vue&type=style&index=0&id=2012f31c&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./PlayerCompo.vue?vue&type=style&index=0&id=5459dda5&scoped=true&lang=css\"","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=09ad3f2d&lang=css\"","<template>\n  <div class=\"appContainer\">\n    <h1>Web-hanabi</h1>\n    <web-hanabi/>\n    <hr>\n    Powered by <a href=\"https://v3.vuejs.org/\">Vue.js</a><br>\n    Source on <a href=\"https://github.com/msakuta/web-hanabi\">GitHub</a>.\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport WebHanabi from './components/WebHanabi.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    WebHanabi\n  }\n}\n</script>\n\n<style>\nbody {\n  background-color: #001f1f;\n}\n\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #abccec;\n  margin-top: 30px;\n  margin-bottom: 30px;\n}\n\n.appContainer {\n  width: 650px;\n  position: relative;\n  margin: auto;\n}\n</style>\n","<template>\n  <div>\n    <label>\n      <input type=\"checkbox\" v-model=\"debugMode\">Debug mode\n    </label>\n  </div>\n  <div>User Id: {{userId}}</div>\n  <div>\n    User Name: <input type=\"text\" v-model=\"gameState.userName\">\n    <button @click=\"setUserName\">Set</button>\n  </div>\n  <div>\n    Session id: {{gameState.sessionId}}\n    <button @click=\"newSession\">New session</button>\n    <button @click=\"joinSession\">Join session</button>\n  </div>\n  <div>\n    <input type=\"text\" ref=\"sessionUrlInput\" v-model=\"sessionUrl\" readonly>\n    <button @click=\"copySessionUrl\">Copy URL to clipboard</button>\n  </div>\n  <p>\n    Remaining cards ({{gameState.fieldCards.length}})\n    <template v-if=\"debugMode\">\n      :\n      <span v-for=\"(card, cidx) in gameState.fieldCards\" :key=\"cidx\" :class=\"['card', card.getClass()]\">\n        {{card.toString() + \" \"}}\n      </span>\n    </template>\n  </p>\n  <div>\n    Played cards ({{gameState.playedCards.reduce((count, cards) => count + cards.length, 0)}}/25):\n    <span v-for=\"(cards, cidx) in gameState.playedCards\" :key=\"cidx\" :class=\"['card', cards.length ? cards[cards.length-1].getClass() : '']\">\n      {{cards.length ? cards[cards.length-1].toString() : ''}}\n    </span>\n  </div>\n  <div>\n    Discarded cards:\n    <span v-for=\"(card, cidx) in gameState.discardedCards\" :key=\"cidx\" :class=\"['card', card.getClass()]\">\n      {{card.toString()}}\n    </span>\n  </div>\n  <div class=\"history\">\n    <ul>\n      <template v-for=\"item in historyReversed\" :key=\"item\">\n        <li>{{substituteHistory(item)}}</li>\n      </template>\n    </ul>\n  </div>\n  <div>\n    Tokens: {{gameState.tokens}}\n  </div>\n  <div>\n    Strikes: {{gameState.strikes}}\n  </div>\n  <player-compo v-for=\"(player, idx) in gameState.players\"\n    :key=\"idx\"\n    :idx=\"idx\"\n    :player=\"player\"\n    :isSelfPlayer=\"gameState.thePlayer === idx\"\n    :debugMode=\"debugMode\"\n    :activeTurn=\"!gameState.gameOver && turn === idx\"\n    :selectedCard=\"selectedCard\"\n    @playerAutoClick=\"togglePlayerAuto(player)\"\n    @playerCardClick=\"(cidx) => playerCardClick(player, cidx)\"\n    @playCard=\"(cidx) => playCard(player, cidx)\"\n    @discardCard=\"(cidx) => discardCard(player, cidx)\"\n    @hintNumber=\"(number) => hintNumber(player, number)\"\n    @hintColor=\"(color) => hintColor(player, color)\">\n  </player-compo>\n</template>\n\n<script lang=\"ts\">\nimport { ref, reactive, computed } from 'vue';\nimport PlayerCompo from './PlayerCompo.vue';\nimport { Card, drawCard, cardLetter, formatCardLetters } from '../card';\nimport { Player } from '../player';\nimport { userId } from '../main';\nimport { GameState } from '../gameState';\n\n\nexport default {\n  name: 'WebHanabi',\n  components: {\n    PlayerCompo,\n  },\n\n  setup(){\n    const gameState = reactive(new GameState());\n    gameState.init();\n    const selectedCard = ref(-1);\n    const turn = computed(() => gameState.globalTurn % gameState.players.length);\n    const debugMode = ref(false);\n    const sessionUrl = computed(() => `${document.location.origin}${document.location.pathname}?sessionId=${gameState.sessionId}`);\n    const sessionUrlInput = ref(null);\n\n    let pendingNextMove = false;\n\n    function tryNextMove(noUpdate = false){\n      if(!noUpdate)\n        gameState.updateSession();\n      const playerInTurn = gameState.players[turn.value];\n\n      // Currently, only the host (the first player that has started the session) has the right\n      // to play the AI. It means if the host leaves, the AIs won't play.\n      // However, if one of the players leave, the game won't continue anyway, so\n      // I don't think it's a serious problem.\n      // Ideally it should be handled by the server (such as Firebase Functions\n      // or AWS lambda), but we're poor!\n      if(playerInTurn.auto && !gameState.gameOver && !pendingNextMove && gameState.thePlayer === 0){\n        pendingNextMove = true;\n        setTimeout(() => {\n          // The player could have recreated by update from server while waiting the timeout,\n          // so we need to get the instance from player list again.\n          const playerInTurn = gameState.players[turn.value];\n          playerInTurn.think(gameState,\n            gameState.globalTurn, playCard, discardCard, hintNumber);\n          pendingNextMove = false;\n          // Try setting next even after clearing pendingNextMove flag\n          tryNextMove();\n        }, 1000);\n      }\n    }\n\n    gameState.tryNextMove = tryNextMove;\n\n    function playerCardClick(player: Player, cidx: number){\n      if(turn.value !== gameState.players.indexOf(player)){\n        console.log(`Hey, it's not your turn! turn: ${turn.value}, player: ${\n          gameState.players.indexOf(player)}`);\n        return;\n      }\n      selectedCard.value = cidx;\n    }\n\n    function checkGameOver(){\n      if(gameState.gameOver){\n        gameState.history.push(`[${gameState.globalTurn + 1}] The game is over! Your score was ${\n          gameState.playedCards.reduce((pre, cur) => pre + cur.length, 0)}`);\n        gameState.endDate = Date.now();\n      }\n    }\n\n    function playCard(player: Player, cidx: number, autoPlay = false){\n      if(gameState.gameOver){\n        alert(\"The game is over.\");\n        return;\n      }\n      if(turn.value !== gameState.players.indexOf(player) ||\n        !autoPlay && (player.auto || turn.value !== gameState.thePlayer))\n      {\n        alert(\"Hey, it's not your turn!\");\n        return;\n      }\n      if(cidx < 0){\n        alert(\"Please select a card.\");\n        return;\n      }\n      const card = player.cards[cidx];\n      player.cards.splice(cidx, 1);\n      let striked = false;\n      if(gameState.playedCards[card.color].length === 0 && card.number !== 0){\n        gameState.strikes++;\n        striked = true;\n      }\n      else if(0 < gameState.playedCards[card.color].length && card.number !== gameState.playedCards[card.color][gameState.playedCards[card.color].length-1].number + 1){\n        gameState.strikes++;\n        striked = true;\n      }\n      else{\n        gameState.playedCards[card.color].push(card);\n        if(card.number === 4){\n          gameState.tokens = Math.min(8, gameState.tokens + 1);\n        }\n      }\n      if(striked)\n        gameState.discardedCards.push(card);\n\n      const drawnCard = drawCard(gameState.fieldCards, Math.floor(Math.random() * gameState.fieldCards.length));\n      if(drawnCard)\n        player.cards.push(drawnCard);\n      if(gameState.fieldCards.length === 0 && gameState.lastRoundBegun < 0)\n        gameState.lastRoundBegun = gameState.globalTurn;\n      gameState.history.push(`[${gameState.globalTurn + 1}] {P${gameState.players.indexOf(player)}} played ${cardLetter(cidx)} which is ${\n        card.toString()} and it was ${striked ? \"a strike\" : \"ok\"}`);\n      gameState.globalTurn++;\n      selectedCard.value = -1;\n      checkGameOver();\n      tryNextMove();\n    }\n\n    function discardCard(player: Player, cidx: number, autoPlay = false){\n      if(gameState.gameOver){\n        alert(\"The game is over.\");\n        return;\n      }\n      if(turn.value !== gameState.players.indexOf(player) || !autoPlay && player.auto){\n        alert(\"Hey, it's not your turn!\");\n        return;\n      }\n      if(cidx < 0){\n        alert(\"Please select a card.\");\n        return;\n      }\n      const card = player.cards[cidx];\n      player.cards.splice(cidx, 1);\n      gameState.discardedCards.push(card);\n      const drawnCard = drawCard(gameState.fieldCards, Math.floor(Math.random() * gameState.fieldCards.length));\n      if(drawnCard)\n        player.cards.push(drawnCard);\n      if(gameState.fieldCards.length === 0 && gameState.lastRoundBegun < 0)\n        gameState.lastRoundBegun = gameState.globalTurn;\n      gameState.history.push(`[${gameState.globalTurn + 1}] {P${gameState.players.indexOf(player)}} discarded ${cardLetter(cidx)} which is ${card.toString()}`);\n      gameState.globalTurn++;\n      gameState.tokens = Math.min(8, gameState.tokens + 1);\n      checkGameOver();\n      tryNextMove();\n    }\n\n    function hintNumber(player: Player, number: number, autoPlay = false) {\n      if(gameState.gameOver){\n        alert(\"The game is over.\");\n        return;\n      }\n      if(!autoPlay && gameState.players[turn.value].auto){\n        alert(\"Hey, it's not your turn!\");\n        return;\n      }\n      if(!autoPlay && gameState.players.indexOf(player) === gameState.thePlayer || gameState.players.indexOf(player) === turn.value){\n        alert(\"You can't hint yourself!\");\n        return;\n      }\n      if(gameState.tokens <= 0){\n        alert(\"You used up all tokens!\");\n        return;\n      }\n      const affected = player.hintNumber(number, gameState.globalTurn);\n      gameState.history.push(`[${gameState.globalTurn + 1}] {P${turn.value}} hinted {P${gameState.players.indexOf(player)}} about ${\n        formatCardLetters(affected)\n      } number ${number+1}`);\n      gameState.globalTurn++;\n      gameState.tokens--;\n      checkGameOver();\n      tryNextMove();\n    }\n\n    function hintColor(player: Player, color: number, autoPlay = false) {\n      if(gameState.gameOver){\n        alert(\"The game is over.\");\n        return;\n      }\n      if(!autoPlay && gameState.players[turn.value].auto){\n        alert(\"Hey, it's not your turn!\");\n        return;\n      }\n      if(!autoPlay && gameState.players.indexOf(player) === gameState.thePlayer || gameState.players.indexOf(player) === turn.value){\n        alert(\"You can't hint yourself!\");\n        return;\n      }\n      if(gameState.tokens <= 0){\n        alert(\"You used up all tokens!\");\n        return;\n      }\n      const affected = player.hintColor(color, gameState.globalTurn);\n      gameState.history.push(`[${gameState.globalTurn + 1}] {P${turn.value}} hinted {P${gameState.players.indexOf(player)}} about ${\n        formatCardLetters(affected)\n      } color ${Card.prototype.getColor(color)}`);\n      gameState.globalTurn++;\n      gameState.tokens--;\n      checkGameOver();\n      tryNextMove();\n    }\n\n    function substituteHistory(item: string){\n      return gameState.players.reduce((ss, player, j) =>\n        ss.replaceAll(`{P${j}}`, j === gameState.thePlayer ? \"You\" : player.name), item);\n    }\n\n    function copySessionUrl() {\n      const copyText = sessionUrlInput.value as HTMLInputElement | null;\n      if(!copyText){\n        return;\n      }\n\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); /* For mobile devices */\n      document.execCommand(\"copy\");\n      alert(\"Copied the text: \" + copyText.value);\n    }\n\n    return {\n      gameState,\n      selectedCard,\n      turn,\n      playerCardClick,\n      playCard,\n      discardCard,\n      hintNumber,\n      hintColor,\n      debugMode,\n      userId,\n      setUserName: () => gameState.setUserName(),\n      togglePlayerAuto: (player: Player) => {\n        player.auto = !player.auto;\n        tryNextMove();\n      },\n      newSession: () => gameState.newSession(),\n      joinSession: () => gameState.joinSession(),\n      historyReversed: computed(() => {\n        const copy = gameState.history.slice();\n        copy.reverse();\n        return copy;\n      }),\n      substituteHistory,\n      sessionUrl,\n      sessionUrlInput,\n      copySessionUrl,\n    }\n  },\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  margin: 2px;\n}\nli {\n  text-align: justify;\n}\na {\n  color: #42b983;\n}\n.history {\n  border: solid 1px #003f3f;\n  position: relative;\n  height: 6em;\n  overflow-y: scroll;\n}\n.card {\n  line-height: 3em;\n  padding: 4px;\n  margin: 4px;\n}\n.red {\n  background-color: #3f0000;\n  border: solid 1px  #af0000;\n}\n.green {\n  background-color: #003f00;\n  border: solid 1px  #00af00;\n}\n.blue {\n  background-color: #00003f;\n  border: solid 1px  #0000ff;\n}\n.yellow {\n  background-color: #3f3f00;\n  border: solid 1px  #ffff00;\n}\n.white {\n  background-color: #3f3f3f;\n  border: solid 1px  #ffffff;\n}\n.hidden {\n  background-color: #1f1f1f;\n  border: solid 1px  #7f7f7f;\n}\n.selected {\n  border-width: 3px;\n}\n.outerFrame {\n  position: relative;\n  left: 320px;\n  margin-left: -320px;\n  right: 0px;\n  width: 640px;\n  height: 640px;\n  border: solid 1px red;\n  background-color: white;\n}\n.playerFrame {\n  border: 1px solid black;\n  position: relative;\n  width: 640px;\n}\n.inactive {\n  background-color: #afafaf;\n}\n.cell {\n  border: solid 1px black;\n  width: 32px;\n  height: 32px;\n}\n.ridge {\n  border: ridge 4px;\n  border-radius: 4px;\n  width: 24px;\n  height: 24px;\n}\n.buttonIcon {\n  border: outset 4px;\n  border-radius: 4px;\n  width: 48px;\n  height: 48px;\n}\n.cellInternalFrame {\n  border: solid 2px #ff00ff;\n  position: absolute;\n  left: 2px;\n  top: 2px;\n  width: 18px;\n  height: 18px;\n  pointer-events: none;\n}\n</style>\n","<template>\n  <div :class=\"['frame', activeTurn ? 'activeFrame' : 'inactiveFrame']\">\n    <span style=\"position: absolute; left: 0; right: 0; width: 8em; height: 5em\">\n      <div :class=\"isSelfPlayer ? 'selfBorder' : ''\">\n        {{activeTurn ? \"* \" : \"  \"}} {{player.name}}:\n      </div>\n      <label>\n        <input type=\"checkbox\" :checked=\"player.auto\" @click=\"playerAutoClick\">Auto\n      </label>\n    </span>\n    <span style=\"position: absolute; left: 8em; top: 0; width: 20em; height: 5em;\">\n      <span v-for=\"(card, cidx) in player.cards\"\n        :key=\"cidx\"\n        :class=\"['card', 'noselect', !debugMode && isSelfPlayer ? 'hidden' : card.getClass(), activeTurn && cidx === selectedCard ? 'selected' : '']\"\n        :style=\"`left: ${cidx * 5}em;`\"\n        @click=\"playerCardClick(cidx)\">\n        <div style=\"font-size: +2; font-weight: bold;\">\n          <span class=\"cardLetter\">\n            {{cardLetter(cidx)}}: \n          </span>\n          {{!debugMode && isSelfPlayer ? \"??\" : card.toString()}}\n        </div>\n        <span v-for=\"j in Array(5).fill().map((_, i)=>i)\"\n          :key=\"j\"\n          :class=\"['small', card.possibleNumbers & (1 << j) ? 'possible' : 'notPossible']\"\n          :style=\"`left: ${j * 5 + 1}px;`\">\n          {{j + 1}}\n        </span>\n        <br>\n        <span v-for=\"j in Array(5).fill().map((_, i)=>i)\"\n          :key=\"j\"\n          :class=\"['small', card.possibleColors & (1 << j) ? 'possible' : 'notPossible']\"\n          :style=\"`left: ${j * 5 + 1}px;`\">\n          {{getColor(j)}}\n        </span>\n      </span>\n    </span>\n    <div\n      v-if=\"debugMode || isSelfPlayer\"\n      style=\"position: absolute; left: 28em; width: 5em; height: 3em;\">\n      <button @click=\"playCard(selectedCard)\">Play</button>\n      <button @click=\"discardCard(selectedCard)\">Discard</button>\n    </div>\n    <div\n      v-if=\"debugMode || !isSelfPlayer\"\n      style=\"position: absolute; left: 3em; top: 5em; width: 25em; height: 2em\">\n      Hint:\n      <template v-for=\"i in Array(5).fill().map((_,i)=>i)\"\n        :key=\"i\">\n        <button @click=\"hintNumber(i)\">\n          {{i + 1}}\n        </button>\n        &nbsp;\n      </template>\n      <template v-for=\"i in Array(5).fill().map((_,i)=>i)\"\n        :key=\"i\">\n        <button @click=\"hintColor(i)\">\n          {{getColor(i)}}\n        </button>\n        &nbsp;\n      </template>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { SetupContext } from 'vue';\nimport { Card, cardLetter } from '../card';\nimport { Player } from '../player';\n\ntype Props = {\n  idx: number;\n  isSelfPlayer: boolean;\n  debugMode: boolean;\n  player: Player;\n  selectedCard: number;\n  activeTurn: boolean;\n};\n\nexport default {\n  name: 'Player ',\n  props: {\n    idx: Number,\n    isSelfPlayer: Boolean,\n    debugMode: Boolean,\n    player: Object,\n    selectedCard: Number,\n    activeTurn: Boolean,\n  },\n\n  setup(props: Props, context: SetupContext){\n    return {\n      playerAutoClick: () => context.emit(\"playerAutoClick\"),\n      playerCardClick: (idx: number) => context.emit(\"playerCardClick\", idx),\n      playCard: (idx: number) => context.emit(\"playCard\", idx),\n      discardCard: (idx: number) => context.emit(\"discardCard\", idx),\n      getColor: (i: number) => Card.prototype.getColor(i),\n      hintNumber: (idx: number) => context.emit(\"hintNumber\", idx),\n      hintColor: (idx: number) => context.emit(\"hintColor\", idx),\n      cardLetter,\n    }\n  },\n}\n</script>\n\n<style scoped>\n.card {\n  line-height: 1.2em;\n  position: absolute;\n  left: 0;\n  width: 3.5em;\n  padding: 4px;\n  margin: 4px;\n  font-family: 'Courier New', Courier, monospace;\n}\n/* Class that prevents text selection by mouse dragging.\n  The style is not defined by standard, so we'd write down browser-dependent styles for major browsers.\n  Support by IE11 is somewhat incomplete since Ctrl+A selects the text in elements even with this style. */\n.noselect{\n  -webkit-touch-callout: none; /* iOS Safari */\n  -webkit-user-select: none;   /* Chrome/Safari/Opera */\n  -khtml-user-select: none;    /* Konqueror */\n  -moz-user-select: none;      /* Firefox */\n  -ms-user-select: none;       /* IE/Edge */\n  user-select: none;           /* non-prefixed version, currently\n                  not supported by any browser */\n}\n.red {\n  background-color: #3f0000;\n  border: solid 1px  #af0000;\n}\n.green {\n  background-color: #003f00;\n  border: solid 1px  #00af00;\n}\n.blue {\n  background-color: #00003f;\n  border: solid 1px  #0000ff;\n}\n.yellow {\n  background-color: #3f3f00;\n  border: solid 1px  #ffff00;\n}\n.white {\n  background-color: #3f3f3f;\n  border: solid 1px  #ffffff;\n}\n.hidden {\n  background-color: #1f1f1f;\n  border: solid 1px  #7f7f7f;\n}\n.selected {\n  border-width: 3px;\n}\n.frame {\n  position: relative;\n  line-height: 3em;\n  left: 0;\n  width: 35em;\n  height: 7em;\n  padding: 4px;\n  margin: 4px;\n}\n.activeFrame {\n  border: solid 1px #3f4f4f;\n  background-color: #0f2f2f;\n}\n.inactiveFrame {\n  border: solid 1px #1f2f2f;\n  background-color: #001f1f;\n}\n.selfBorder {\n  border: solid 1px #00ff00;\n}\n.small {\n  font-size: 80%;\n}\n.possible {\n  color: #9babab;\n}\n.notPossible {\n  color: #1c1e2f\n}\n.cardLetter {\n  color: #7b9cbc\n}\n</style>\n","export class Card {\n  number = 1;\n  color = 1;\n  possibleNumbers = (1 << 5) - 1; // Bitfield [0, 32)\n  possibleColors = (1 << 5) - 1; // Bitfield [0, 32)\n  constructor(number = 0, color = 0) {\n    this.number = number;\n    this.color = color;\n  }\n\n  toString() {\n    return `${this.getColor()}${this.number + 1}`;\n  }\n\n  serialize() {\n    // We encode the card state to compact string because this is a \"leaf\" of the\n    // data structure.\n    // Technically, possible numbers and colors could be reconstructed from hint\n    // history, but it's tedious to accumulate all the history and make sure it\n    // is consistent, so we just embed that information to serialized string.\n    return this.toString() + `:${this.possibleNumbers}:${this.possibleColors}`;\n  }\n\n  deserialize(s: string) {\n    this.color = fromColor(s[0]);\n    this.number = s[1].charCodeAt(0) - \"1\".charCodeAt(0);\n    const splits = s.substr(3).split(\":\");\n    if(0 < splits.length)\n      this.possibleNumbers = parseInt(splits[0]);\n    if(1 < splits.length)\n      this.possibleColors = parseInt(splits[1]);\n  }\n\n  getColor(color: number | null = null) {\n    color = color ?? this.color;\n    switch(color){\n      case 0: return \"r\";\n      case 1: return \"g\";\n      case 2: return \"b\";\n      case 3: return \"y\";\n      case 4: return \"w\";\n      case 5: return \"x\";\n      default: return \"?\";\n    }\n  }\n\n  getClass() {\n    switch(this.color){\n      case 0: return \"red\";\n      case 1: return \"green\";\n      case 2: return \"blue\";\n      case 3: return \"yellow\";\n      case 4: return \"white\";\n      case 5: return \"rainbow\";\n      default: return \"\";\n    }\n  }\n\n  /// Returns whether the hint affected the possibility of the card\n  hintNumber(number: number) {\n    if(this.number === number){\n      this.possibleNumbers &= 1 << number;\n      return true;\n    }\n    else{\n      this.possibleNumbers &= ~(1 << number) & 0x1f;\n      return false;\n    }\n  }\n\n  /// Returns whether the hint affected the possibility of the card\n  hintColor(color: number) {\n    if(this.color === color){\n      this.possibleColors &= 1 << color;\n      return true;\n    }\n    else{\n      this.possibleColors &= ~(1 << color) & 0x1f;\n      return false;\n    }\n  }\n}\n\nexport function genCards() {\n  const ret: Card[] = [];\n  for(let n = 0; n < 5; n++){\n    for(let i = 0; i < (n == 0 ? 3 : n < 4 ? 2 : 1); i++){\n      for(let c = 0; c < 5; c++){\n        ret.push(new Card(n, c));\n      }\n    }\n  }\n  return ret;\n}\n\nexport function drawCard(cards: Card[], index: number) {\n  if(index === undefined)\n    index = cards.length - 1;\n  return cards.splice(index, 1)[0];\n}\n\nexport function cardLetter(index: number) {\n  return String.fromCharCode('A'.charCodeAt(0) + index);\n}\n\nexport function formatCardLetters(indices: number[]) {\n  return indices.length === 0 ? \"none are\" :\n        indices.length === 1 ? cardLetter(indices[0]) + \" is\" :\n        indices.reduce((s, c, i) => (i === indices.length - 1 ? s + \" and \" :\n          0 < i ? s + \", \" : \"\") + cardLetter(c), \"\") + \" are\";\n}\n\nfunction fromColor(color: string): number {\n  switch(color){\n    case \"r\": return 0;\n    case \"g\": return 1;\n    case \"b\": return 2;\n    case \"y\": return 3;\n    case \"w\": return 4;\n    case \"x\": return 5;\n    default: return -1;\n  }\n}","\nimport { SetupContext } from 'vue';\nimport { Card, cardLetter } from '../card';\nimport { Player } from '../player';\n\ntype Props = {\n  idx: number;\n  isSelfPlayer: boolean;\n  debugMode: boolean;\n  player: Player;\n  selectedCard: number;\n  activeTurn: boolean;\n};\n\nexport default {\n  name: 'Player ',\n  props: {\n    idx: Number,\n    isSelfPlayer: Boolean,\n    debugMode: Boolean,\n    player: Object,\n    selectedCard: Number,\n    activeTurn: Boolean,\n  },\n\n  setup(props: Props, context: SetupContext){\n    return {\n      playerAutoClick: () => context.emit(\"playerAutoClick\"),\n      playerCardClick: (idx: number) => context.emit(\"playerCardClick\", idx),\n      playCard: (idx: number) => context.emit(\"playCard\", idx),\n      discardCard: (idx: number) => context.emit(\"discardCard\", idx),\n      getColor: (i: number) => Card.prototype.getColor(i),\n      hintNumber: (idx: number) => context.emit(\"hintNumber\", idx),\n      hintColor: (idx: number) => context.emit(\"hintColor\", idx),\n      cardLetter,\n    }\n  },\n}\n","import { render } from \"./PlayerCompo.vue?vue&type=template&id=5459dda5&scoped=true\"\nimport script from \"./PlayerCompo.vue?vue&type=script&lang=ts\"\nexport * from \"./PlayerCompo.vue?vue&type=script&lang=ts\"\n\nimport \"./PlayerCompo.vue?vue&type=style&index=0&id=5459dda5&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-5459dda5\"\n\nexport default script","import { Card } from './card';\nimport { GameState } from './gameState';\n\nfunction countIf<T>(arr: Array<T>, f: ((t: T) => boolean)): number {\n  return arr.reduce((accum, item) => accum + (f(item) ? 1 : 0), 0);\n}\n\ninterface SerializedPlayer {\n  name: string;\n  playerId?: string;\n  auto: boolean;\n  cards: string[];\n  lastHintedNumber?: { number: number; turn: number };\n  lastHintedColor?: { color: number; turn: number };\n}\n\nexport class Player {\n  name = \"\";\n  playerId?: string;\n  auto = false;\n  cards: Card[];\n  lastHintedNumber?: { number: number; turn: number };\n  lastHintedColor?: { color: number; turn: number };\n\n\n  constructor(name: string, cards: Card[], auto = false, drawCard?: ((cards: Card[], cidx: number) => Card)){\n    this.name = name;\n    this.auto = auto;\n    this.cards = drawCard ?\n      [...Array(4)].map(() => drawCard(cards, Math.floor(Math.random() * cards.length))) : [];\n  }\n\n  serialize(): SerializedPlayer {\n    const ret: SerializedPlayer = {\n      name: this.name,\n      auto: this.auto,\n      cards: this.cards.map(card => card.serialize()),\n    };\n    if(this.playerId)\n      ret.playerId = this.playerId;\n    if(this.lastHintedNumber)\n      ret.lastHintedNumber = this.lastHintedNumber;\n    if(this.lastHintedColor)\n      ret.lastHintedColor = this.lastHintedColor;\n    return ret;\n  }\n\n  deserialize(data: SerializedPlayer) {\n    this.name = data.name;\n    this.playerId = data.playerId;\n    this.auto = data.auto;\n    this.cards = data.cards.map(data => {\n      const card = new Card;\n      card.deserialize(data);\n      return card;\n    })\n    this.lastHintedNumber = data.lastHintedNumber;\n    this.lastHintedColor = data.lastHintedColor;\n  }\n\n  think(gameState: GameState,\n    turn: number,\n    playCard: ((p: Player, cidx: number, autoPlay: boolean) => void),\n    discardCard: ((p: Player, cidx: number, autoPlay: boolean) => void),\n    hintNumber: ((p: Player, cidx: number, autoPlay: boolean) => void))\n  {\n    const preferredCard = (() => {\n      const hintedNumber = this.lastHintedNumber;\n      if(hintedNumber){\n        // If there was a hint for a number in the last round and there is open place to put a card,\n        // assume it was a suggestion to play it.\n        const number = hintedNumber.number;\n        if(gameState.globalTurn - gameState.players.length <= hintedNumber.turn &&\n          gameState.playedCards.find((cards: Card[]) =>\n            (number === 0 || cards[number - 1]) && !cards[number]))\n        {\n          return this.cards.findIndex(card => card.possibleNumbers === (1 << number));\n        }\n      }\n      const hintedColor = this.lastHintedColor;\n      if(hintedColor){\n        // If there was a hint for only one card in the last round, assume it was a suggestion to\n        // play it.\n        const hitColors = countIf(this.cards, card => card.color === hintedColor.color);\n        if(hitColors === 1 && gameState.globalTurn - gameState.players.length <= hintedColor.turn)\n          return this.cards.findIndex(card => card.color === hintedColor.color);\n      }\n      return -1;\n    })();\n    if(0 <= preferredCard){\n      playCard(this, preferredCard, true);\n      return;\n    }\n    else if(gameState.tokens !== 0){\n      const openNumbers = [...Array(5)].map((_, number) => number)\n        .filter(number => !!gameState.playedCards.find((cards: Card[]) =>\n          (number === 0 || cards[number - 1]) && !cards[number]));\n\n      // Check others' cards to see if I can give a hint.\n      for(const player of gameState.players){\n        if(player === this)\n          continue;\n        // Hint unhinted open number for another player\n        for(const number of openNumbers){\n          let numPlayableCards = 0;\n          let numHintableCards = 0;\n          for(const card of player.cards){\n            if(card.number === number)\n              numHintableCards++;\n            if(card.number === number && card.possibleNumbers !== (1 << number) &&\n              gameState.playedCards.find((cards: Card[], color) =>\n                (number === 0 || cards[number - 1]) && !cards[number] && color === card.color))\n            {\n              numPlayableCards++;\n            }\n          }\n\n          // Give the hint only if all the hinted cards are okay to play\n          if(0 < numHintableCards && numPlayableCards === numHintableCards){\n            hintNumber(player, number, true);\n            return;\n          }\n        }\n      }\n    }\n\n    // Nothing useful to do. Dumb strategy to discard from rightmost\n    discardCard(this, this.cards.length-1, true);\n  }\n\n  hintNumber(number: number, turn: number){\n    const affected = [];\n    for(let i = 0; i < this.cards.length; i++){\n      if(this.cards[i].hintNumber(number))\n        affected.push(i);\n    }\n    this.lastHintedNumber = { number, turn };\n    return affected;\n  }\n\n  hintColor(color: number, turn: number){\n    turn;\n    const affected = [];\n    for(let i = 0; i < this.cards.length; i++){\n      if(this.cards[i].hintColor(color))\n        affected.push(i);\n    }\n    this.lastHintedColor = { color, turn };\n    return affected;\n  }\n}\n","import { offlineMode, db } from './main';\n\n// Sessions are supposed to be shared, so it's shorter than userId.\nconst sessionIdLength = 20;\n\nexport function generateSessionId(){\n  if(offlineMode || !db){\n    return \"\";\n  }\n  // This is not cryptographically safe random number, but we'd settle for this\n  // because this application is not serious.\n  // At this point the sessionId in users should be initialized.\n  const doc = db.collection(\"/sessions\").doc();\n  doc.set({});\n  localStorage.setItem('WebHanabiSessionId', doc.id);\n  return doc.id;\n}\n\n\nexport function loadSessionId(){\n  if(offlineMode || !db){\n    return \"\";\n  }\n  const params = new URLSearchParams(document.location.search.substring(1));\n  let sessionId = params.get('sessionId');\n  if(sessionId && sessionId.length === sessionIdLength){\n    return sessionId;\n  }\n  const st = localStorage.getItem('WebHanabiSessionId');\n  if(st && typeof st === \"string\" && st.length === sessionIdLength){\n    sessionId = st;\n  }\n  else{\n    // If the data is not as expected, regenerate random id\n    sessionId = generateSessionId();\n  }\n  return sessionId;\n}\n\nexport function saveSessionId(sessionId: string){\n  localStorage.setItem('WebHanabiSessionId', sessionId);\n}\n","import firebase from 'firebase';\r\nimport { offlineMode, db, userId, loadUserName } from './main';\r\nimport { Card, genCards, drawCard } from './card';\r\nimport { Player } from './player';\r\nimport { loadSessionId, saveSessionId, generateSessionId } from './session';\r\n\r\nexport class GameState {\r\n  userName: string;\r\n  sessionId: string;\r\n  unsubscriber?: () => void;\r\n  history: string[] = [];\r\n  fieldCards: Card[] = [];\r\n  discardedCards: Card[] = [];\r\n  playedCards: Card[][] = [...Array(5)].map(() => []);\r\n  players: Player[] = [];\r\n  thePlayer = 0;\r\n  globalTurn = 0;\r\n  tokens = 8;\r\n  strikes = 0;\r\n  startDate = 0;\r\n  endDate?: number;\r\n  lastRoundBegun = -1;\r\n  tryNextMove?: (noUpdate: boolean) => void;\r\n\r\n  constructor(){\r\n    this.userName = \"\";\r\n    this.sessionId = loadSessionId();\r\n    this.resetGame();\r\n  }\r\n\r\n  get gameOver() {\r\n    return 3 <= this.strikes || this.playedCards.reduce(\r\n      (pre: boolean, cur: Card[]) =>\r\n        pre && 0 < cur.length && cur[cur.length-1].number === 4, true) ||\r\n          0 <= this.lastRoundBegun &&\r\n          this.lastRoundBegun + this.players.length <= this.globalTurn;\r\n  }\r\n\r\n  resetGame() {\r\n    this.thePlayer = 0; // The resetter is always the host.\r\n    this.history = [];\r\n    this.fieldCards = genCards(),\r\n    this.discardedCards = [];\r\n    this.playedCards = [...Array(5)].map(() => []);\r\n    this.players = [...Array(4)].map((_, i) => new Player(i === this.thePlayer ? this.userName : `Player ${i}`,\r\n      this.fieldCards, i !== 0, drawCard));\r\n    this.players[this.thePlayer].playerId = userId;\r\n    this.globalTurn = 0;\r\n    this.tokens = 8;\r\n    this.strikes = 0;\r\n    this.startDate = Date.now();\r\n    this.endDate = undefined;\r\n    this.lastRoundBegun = -1;\r\n  }\r\n\r\n  /// Defer initialization to enable event handlers\r\n  init() {\r\n    loadUserName().then(name => {\r\n      this.userName = name;\r\n      this.players[this.thePlayer].name = name;\r\n      this.players[this.thePlayer].playerId = userId;\r\n    });\r\n\r\n    this.loadSession(this.sessionId).then(value => this.deserializeSession(value));\r\n\r\n    this.subscribe();\r\n  }\r\n\r\n  setUserName(){\r\n    if(offlineMode || !db){\r\n      this.players[this.thePlayer].name = this.userName;\r\n      return;\r\n    }\r\n    db.collection(\"/users\").doc(userId).set({name: this.userName});\r\n    if(this.sessionId && 0 <= this.thePlayer){\r\n      this.players[this.thePlayer].name = this.userName;\r\n      this.updateSession();\r\n    }\r\n  }\r\n\r\n  subscribe(){\r\n    if(offlineMode || !db){\r\n      return;\r\n    }\r\n    if(this.unsubscriber)\r\n      this.unsubscriber();\r\n    this.unsubscriber = db.collection('/sessions').doc(this.sessionId).onSnapshot({\r\n      next: data => {\r\n        if(data.exists){\r\n          this.deserializeSession(data);\r\n\r\n          // When another player than the host plays, try to run an AI if the next player was an AI.\r\n          // Do not upload the state because it would make infinite loop.\r\n          if(this.tryNextMove){\r\n            this.tryNextMove(true);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  newSession(){\r\n    if(!confirm(\"This session will be discarded. Are you sure?\"))\r\n      return;\r\n    this.sessionId = generateSessionId();\r\n    this.subscribe();\r\n    this.resetGame();\r\n    this.updateSession();\r\n  }\r\n\r\n  updateSession(){\r\n    if(offlineMode || !db){\r\n      return;\r\n    }\r\n    console.log(`updateSession ${this.globalTurn}`);\r\n    // eslint-disable-next-line\r\n    const data: any = {\r\n      history: this.history,\r\n      fieldCards: this.fieldCards.map(card => card.serialize()),\r\n      discardedCards: this.discardedCards.map(card => card.serialize()),\r\n      playedCards: this.playedCards.map(cards => cards.length),\r\n      players: this.players.map(player => player.serialize()),\r\n      globalTurn: this.globalTurn,\r\n      tokens: this.tokens,\r\n      strikes: this.strikes,\r\n      startDate: this.startDate,\r\n    };\r\n    if(0 <= this.lastRoundBegun){\r\n      data.lastRoundBegun = this.lastRoundBegun;\r\n    }\r\n    if(this.endDate){\r\n      data.endDate = this.endDate;\r\n    }\r\n    db.collection(\"/sessions\").doc(this.sessionId).update(data);\r\n  }\r\n\r\n  deserializeSession(doc?: firebase.firestore.DocumentData) {\r\n    if(!doc)\r\n      return null;\r\n    const history = doc.get(\"history\") as string[] | undefined;\r\n    if(history === undefined)\r\n      return null;\r\n    const fieldCards = doc.get(\"fieldCards\") as string[] | undefined;\r\n    if(!fieldCards)\r\n      return null;\r\n    const discardedCards = doc.get(\"discardedCards\") as string[] | undefined;\r\n    if(!discardedCards)\r\n      return null;\r\n    const playedCards = doc.get(\"playedCards\") as string[][] | undefined;\r\n    if(!playedCards)\r\n      return null;\r\n    // eslint-disable-next-line\r\n    const players = doc.get(\"players\") as any[] | undefined;\r\n    if(!players)\r\n      return null;\r\n    const globalTurn = doc.get(\"globalTurn\") as number | undefined;\r\n    if(globalTurn === undefined)\r\n      return null;\r\n    const tokens = doc.get(\"tokens\") as number | undefined;\r\n    if(tokens === undefined)\r\n      return null;\r\n    const strikes = doc.get(\"strikes\") as number | undefined;\r\n    if(strikes === undefined)\r\n      return null;\r\n    const startDate = doc.get(\"startDate\") as number | undefined;\r\n    if(startDate === undefined)\r\n      return null;\r\n    const endDate = doc.get(\"endDate\") as number | undefined;\r\n    const lastRoundBegun = doc.get(\"lastRoundBegun\") as number | undefined;\r\n\r\n    console.log(`deserializeSession ${globalTurn}`);\r\n\r\n    this.history = history;\r\n\r\n    this.fieldCards = fieldCards.map((data) => {\r\n      const card = new Card;\r\n      card.deserialize(data);\r\n      return card;\r\n    });\r\n\r\n    this.discardedCards = discardedCards.map((data) => {\r\n      const card = new Card;\r\n      card.deserialize(data);\r\n      return card;\r\n    });\r\n\r\n    this.playedCards = playedCards.map((size, color) => [...Array(size)].map((_, number) =>\r\n      new Card(number, color)));\r\n\r\n    this.thePlayer = -1;\r\n    let foundSelf = false;\r\n    this.players = players.map((data, idx) => {\r\n      const player = new Player(\"\", [], undefined);\r\n      player.deserialize(data);\r\n      if(player.playerId === userId){\r\n        this.thePlayer = idx;\r\n        foundSelf = true;\r\n      }\r\n      return player;\r\n    });\r\n\r\n    this.globalTurn = globalTurn;\r\n    this.tokens = tokens;\r\n    this.strikes = strikes;\r\n    this.lastRoundBegun = lastRoundBegun === undefined ? -1 : lastRoundBegun;\r\n    this.startDate = startDate;\r\n    this.endDate = endDate;\r\n\r\n    if(!foundSelf){\r\n      const firstNonPlayer = this.players.findIndex(player => !player.playerId);\r\n      if(0 <= firstNonPlayer){\r\n        this.players[firstNonPlayer].name = this.userName;\r\n        this.players[firstNonPlayer].playerId = userId;\r\n        this.players[firstNonPlayer].auto = false;\r\n        this.updateSession();\r\n      }\r\n    }\r\n  }\r\n\r\n  async loadSession(sessionId: string) {\r\n    if(offlineMode || !db){\r\n        return;\r\n    }\r\n    return await db.collection(\"/sessions\").doc(sessionId).get();\r\n  }\r\n\r\n  async joinSession(){\r\n    const newId = prompt(\"Enter session id\");\r\n    if(!newId)\r\n      return;\r\n    const sessionData = await this.loadSession(newId);\r\n    this.deserializeSession(sessionData);\r\n    this.sessionId = newId;\r\n    this.subscribe();\r\n    saveSessionId(newId);\r\n  }\r\n\r\n  playerName(player: Player){\r\n    const id = this.players.indexOf(player);\r\n    if(id === this.thePlayer){\r\n      return \"You\";\r\n    }\r\n    else{\r\n      return `Player ${id}`;\r\n    }\r\n  }\r\n}\r\n","\nimport { ref, reactive, computed } from 'vue';\nimport PlayerCompo from './PlayerCompo.vue';\nimport { Card, drawCard, cardLetter, formatCardLetters } from '../card';\nimport { Player } from '../player';\nimport { userId } from '../main';\nimport { GameState } from '../gameState';\n\n\nexport default {\n  name: 'WebHanabi',\n  components: {\n    PlayerCompo,\n  },\n\n  setup(){\n    const gameState = reactive(new GameState());\n    gameState.init();\n    const selectedCard = ref(-1);\n    const turn = computed(() => gameState.globalTurn % gameState.players.length);\n    const debugMode = ref(false);\n    const sessionUrl = computed(() => `${document.location.origin}${document.location.pathname}?sessionId=${gameState.sessionId}`);\n    const sessionUrlInput = ref(null);\n\n    let pendingNextMove = false;\n\n    function tryNextMove(noUpdate = false){\n      if(!noUpdate)\n        gameState.updateSession();\n      const playerInTurn = gameState.players[turn.value];\n\n      // Currently, only the host (the first player that has started the session) has the right\n      // to play the AI. It means if the host leaves, the AIs won't play.\n      // However, if one of the players leave, the game won't continue anyway, so\n      // I don't think it's a serious problem.\n      // Ideally it should be handled by the server (such as Firebase Functions\n      // or AWS lambda), but we're poor!\n      if(playerInTurn.auto && !gameState.gameOver && !pendingNextMove && gameState.thePlayer === 0){\n        pendingNextMove = true;\n        setTimeout(() => {\n          // The player could have recreated by update from server while waiting the timeout,\n          // so we need to get the instance from player list again.\n          const playerInTurn = gameState.players[turn.value];\n          playerInTurn.think(gameState,\n            gameState.globalTurn, playCard, discardCard, hintNumber);\n          pendingNextMove = false;\n          // Try setting next even after clearing pendingNextMove flag\n          tryNextMove();\n        }, 1000);\n      }\n    }\n\n    gameState.tryNextMove = tryNextMove;\n\n    function playerCardClick(player: Player, cidx: number){\n      if(turn.value !== gameState.players.indexOf(player)){\n        console.log(`Hey, it's not your turn! turn: ${turn.value}, player: ${\n          gameState.players.indexOf(player)}`);\n        return;\n      }\n      selectedCard.value = cidx;\n    }\n\n    function checkGameOver(){\n      if(gameState.gameOver){\n        gameState.history.push(`[${gameState.globalTurn + 1}] The game is over! Your score was ${\n          gameState.playedCards.reduce((pre, cur) => pre + cur.length, 0)}`);\n        gameState.endDate = Date.now();\n      }\n    }\n\n    function playCard(player: Player, cidx: number, autoPlay = false){\n      if(gameState.gameOver){\n        alert(\"The game is over.\");\n        return;\n      }\n      if(turn.value !== gameState.players.indexOf(player) ||\n        !autoPlay && (player.auto || turn.value !== gameState.thePlayer))\n      {\n        alert(\"Hey, it's not your turn!\");\n        return;\n      }\n      if(cidx < 0){\n        alert(\"Please select a card.\");\n        return;\n      }\n      const card = player.cards[cidx];\n      player.cards.splice(cidx, 1);\n      let striked = false;\n      if(gameState.playedCards[card.color].length === 0 && card.number !== 0){\n        gameState.strikes++;\n        striked = true;\n      }\n      else if(0 < gameState.playedCards[card.color].length && card.number !== gameState.playedCards[card.color][gameState.playedCards[card.color].length-1].number + 1){\n        gameState.strikes++;\n        striked = true;\n      }\n      else{\n        gameState.playedCards[card.color].push(card);\n        if(card.number === 4){\n          gameState.tokens = Math.min(8, gameState.tokens + 1);\n        }\n      }\n      if(striked)\n        gameState.discardedCards.push(card);\n\n      const drawnCard = drawCard(gameState.fieldCards, Math.floor(Math.random() * gameState.fieldCards.length));\n      if(drawnCard)\n        player.cards.push(drawnCard);\n      if(gameState.fieldCards.length === 0 && gameState.lastRoundBegun < 0)\n        gameState.lastRoundBegun = gameState.globalTurn;\n      gameState.history.push(`[${gameState.globalTurn + 1}] {P${gameState.players.indexOf(player)}} played ${cardLetter(cidx)} which is ${\n        card.toString()} and it was ${striked ? \"a strike\" : \"ok\"}`);\n      gameState.globalTurn++;\n      selectedCard.value = -1;\n      checkGameOver();\n      tryNextMove();\n    }\n\n    function discardCard(player: Player, cidx: number, autoPlay = false){\n      if(gameState.gameOver){\n        alert(\"The game is over.\");\n        return;\n      }\n      if(turn.value !== gameState.players.indexOf(player) || !autoPlay && player.auto){\n        alert(\"Hey, it's not your turn!\");\n        return;\n      }\n      if(cidx < 0){\n        alert(\"Please select a card.\");\n        return;\n      }\n      const card = player.cards[cidx];\n      player.cards.splice(cidx, 1);\n      gameState.discardedCards.push(card);\n      const drawnCard = drawCard(gameState.fieldCards, Math.floor(Math.random() * gameState.fieldCards.length));\n      if(drawnCard)\n        player.cards.push(drawnCard);\n      if(gameState.fieldCards.length === 0 && gameState.lastRoundBegun < 0)\n        gameState.lastRoundBegun = gameState.globalTurn;\n      gameState.history.push(`[${gameState.globalTurn + 1}] {P${gameState.players.indexOf(player)}} discarded ${cardLetter(cidx)} which is ${card.toString()}`);\n      gameState.globalTurn++;\n      gameState.tokens = Math.min(8, gameState.tokens + 1);\n      checkGameOver();\n      tryNextMove();\n    }\n\n    function hintNumber(player: Player, number: number, autoPlay = false) {\n      if(gameState.gameOver){\n        alert(\"The game is over.\");\n        return;\n      }\n      if(!autoPlay && gameState.players[turn.value].auto){\n        alert(\"Hey, it's not your turn!\");\n        return;\n      }\n      if(!autoPlay && gameState.players.indexOf(player) === gameState.thePlayer || gameState.players.indexOf(player) === turn.value){\n        alert(\"You can't hint yourself!\");\n        return;\n      }\n      if(gameState.tokens <= 0){\n        alert(\"You used up all tokens!\");\n        return;\n      }\n      const affected = player.hintNumber(number, gameState.globalTurn);\n      gameState.history.push(`[${gameState.globalTurn + 1}] {P${turn.value}} hinted {P${gameState.players.indexOf(player)}} about ${\n        formatCardLetters(affected)\n      } number ${number+1}`);\n      gameState.globalTurn++;\n      gameState.tokens--;\n      checkGameOver();\n      tryNextMove();\n    }\n\n    function hintColor(player: Player, color: number, autoPlay = false) {\n      if(gameState.gameOver){\n        alert(\"The game is over.\");\n        return;\n      }\n      if(!autoPlay && gameState.players[turn.value].auto){\n        alert(\"Hey, it's not your turn!\");\n        return;\n      }\n      if(!autoPlay && gameState.players.indexOf(player) === gameState.thePlayer || gameState.players.indexOf(player) === turn.value){\n        alert(\"You can't hint yourself!\");\n        return;\n      }\n      if(gameState.tokens <= 0){\n        alert(\"You used up all tokens!\");\n        return;\n      }\n      const affected = player.hintColor(color, gameState.globalTurn);\n      gameState.history.push(`[${gameState.globalTurn + 1}] {P${turn.value}} hinted {P${gameState.players.indexOf(player)}} about ${\n        formatCardLetters(affected)\n      } color ${Card.prototype.getColor(color)}`);\n      gameState.globalTurn++;\n      gameState.tokens--;\n      checkGameOver();\n      tryNextMove();\n    }\n\n    function substituteHistory(item: string){\n      return gameState.players.reduce((ss, player, j) =>\n        ss.replaceAll(`{P${j}}`, j === gameState.thePlayer ? \"You\" : player.name), item);\n    }\n\n    function copySessionUrl() {\n      const copyText = sessionUrlInput.value as HTMLInputElement | null;\n      if(!copyText){\n        return;\n      }\n\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); /* For mobile devices */\n      document.execCommand(\"copy\");\n      alert(\"Copied the text: \" + copyText.value);\n    }\n\n    return {\n      gameState,\n      selectedCard,\n      turn,\n      playerCardClick,\n      playCard,\n      discardCard,\n      hintNumber,\n      hintColor,\n      debugMode,\n      userId,\n      setUserName: () => gameState.setUserName(),\n      togglePlayerAuto: (player: Player) => {\n        player.auto = !player.auto;\n        tryNextMove();\n      },\n      newSession: () => gameState.newSession(),\n      joinSession: () => gameState.joinSession(),\n      historyReversed: computed(() => {\n        const copy = gameState.history.slice();\n        copy.reverse();\n        return copy;\n      }),\n      substituteHistory,\n      sessionUrl,\n      sessionUrlInput,\n      copySessionUrl,\n    }\n  },\n}\n","import { render } from \"./WebHanabi.vue?vue&type=template&id=2012f31c&scoped=true\"\nimport script from \"./WebHanabi.vue?vue&type=script&lang=ts\"\nexport * from \"./WebHanabi.vue?vue&type=script&lang=ts\"\n\nimport \"./WebHanabi.vue?vue&type=style&index=0&id=2012f31c&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-2012f31c\"\n\nexport default script","\nimport WebHanabi from './components/WebHanabi.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    WebHanabi\n  }\n}\n","import { render } from \"./App.vue?vue&type=template&id=09ad3f2d\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=09ad3f2d&lang=css\"\nscript.render = render\n\nexport default script","import { createApp } from 'vue'\nimport App from './App.vue'\nimport firebase from 'firebase';\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n// Create .env.local and put VUE_APP_API_KEY and others to grant access.\n// Note that this is not secure at all!\nexport let offlineMode = false;\nif(!process.env.VUE_APP_API_KEY){\n  offlineMode = true;\n}\nelse{\n  const firebaseConfig = {\n    apiKey: process.env.VUE_APP_API_KEY,\n    authDomain: process.env.VUE_APP_AUTH_DOMAIN,\n    projectId: process.env.VUE_APP_PROJECT_ID,\n    storageBucket: process.env.VUE_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.VUE_APP_MESSAGING_SENDER_ID,\n    appId: process.env.VUE_APP_APP_ID,\n    measurementId: process.env.VUE_APP_MEASUREMENT_ID,\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  firebase.analytics();\n}\n\n\n// Initialize Cloud Firestore through Firebase\nexport const db = offlineMode ? null : firebase.firestore();\n\n\nfunction generateUserId(){\n  if(offlineMode || !db){\n      return \"\";\n  }\n  const doc = db.collection(\"/users\").doc();\n  doc.set({name: \"new user\"});\n  const userId = doc.id;\n  localStorage.setItem('WebHanabiUserId', userId);\n  return userId;\n}\n\nfunction loadUserId(){\n  if(offlineMode || !db){\n      return;\n  }\n  const st = localStorage.getItem('WebHanabiUserId');\n  let userId = \"\";\n  if(st && typeof st === \"string\" && st.length !== 0){\n    userId = st;\n  }\n  else{\n    // If the data is not as expected, regenerate random id\n    userId = generateUserId();\n  }\n  return userId;\n}\n\nexport const userId = loadUserId();\n\nexport async function loadUserName(){\n  if(offlineMode || !db){\n      return \"new user\";\n  }\n  const data = await db.collection(\"/users\").doc(userId).get();\n  if(data.exists){\n      return data.get(\"name\") as string;\n  }\n  return \"new user\";\n}\n\n\ncreateApp(App).mount('#app')\n"],"sourceRoot":""}